name: Build docker image

on:
    release:
        types: [published]

permissions:
    contents: read
    packages: write
    attestations: write
    id-token: write

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php-versions: ['8.2', '8.3']
                include:
                    - php-versions: '8.3'
                      alpine-version: 8.3-cli-alpine
                      alpine-packages: php83-ctype php83-xml php83-dom php83-tokenizer
                      latest: true
                    - php-versions: '8.2'
                      alpine-version: 8.2-cli-alpine
                      alpine-packages: php82-ctype php82-xml php82-dom php82-tokenizer
                      latest: false

        steps:
            - uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: ctype, dom, iconv
                  coverage: none

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress --no-dev

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Extract metadata for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: jtattevin/homeassistant-php
                  flavor: |
                    latest=${{ matrix.latest }}
                    suffix=-php-${{ matrix.php-versions }}

            - name: Build and push Docker image
              id: build_push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  push: true
                  build-args: |
                    ALPINE_VERSION=${{ matrix.alpine-version }}
                    ALPINE_PACKAGES=${{ matrix.alpine-packages }}
                  platforms: |
                      linux/amd64
                      linux/arm64

            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v1
              with:
                  subject-name: docker.io/jtattevin/homeassistant-php
                  subject-digest: ${{ steps.build_push.outputs.digest }}
                  push-to-registry: false
